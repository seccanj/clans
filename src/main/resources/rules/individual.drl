import org.seccanj.clans.model.Entity;
import org.seccanj.clans.model.Cell;
import org.seccanj.clans.model.RelativeCell;
import org.seccanj.clans.model.World;
import org.seccanj.clans.model.ModelUtils;
import org.seccanj.clans.model.Position;
import org.seccanj.clans.model.Direction;
import org.seccanj.clans.model.Food;
import org.seccanj.clans.model.Direction.Directions;
import org.seccanj.clans.model.entities.Individual;
import org.seccanj.clans.model.entities.Plant;
import org.seccanj.clans.model.control.EndOfTurn;
import org.seccanj.clans.model.control.ActionDone;


rule "Test individual action"
    when
        $individual : Individual( leftActionPoints >= 1 )
        
        $world : World()

    then
        System.out.println("Test action for "+$individual.toString());
        
        modify ( $individual ) {
        	useActionPoints( 1 )
        };

end

rule "Starvation"
    when
        $individual : Individual( energy < 10 )
        
        exists EndOfTurn( individual == $individual )
        
        not ActionDone( individual == $individual, actionType == "starvation" )

    then
        System.out.println("Starving "+$individual.toString());

        modify ( $individual ) {
        	decreaseHealth( 20 )
        };

		insert(	new ActionDone( $individual, "starvation" ) );

end

rule "Individual end of turn"
    when
        $individual : Individual( leftActionPoints == 0 )
        
        not EndOfTurn( individual == $individual )

    then
        System.out.println("End of turn for "+$individual.toString());

        modify ( $individual ) {
        	useEnergy( 1 )
        };

		insert(	new EndOfTurn( $individual ) );

end

rule "Teardown"
    when
        $individual : Individual( health <= 0 )

		$cell : Cell( entity == $individual )
        
        $world : World()

    then
        System.out.println("Removing dead individual " + $individual.toString());
        
        modify ( $world ) {
        	removeEntity( $individual )
        };

        delete ( $cell );
        
        delete ( $individual );

end

query "End of turns"
    $endOfTurn : EndOfTurn()
end

query "Action dones"
    $actionDone : ActionDone()
end

